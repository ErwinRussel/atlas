
#ifndef ATLAS_ATL_UH_H
#define ATLAS_ATL_UH_H

#endif //ATLAS_ATL_UH_H
Display* xopendisplay_uh(args_XOpenDisplay argp);
int xmapwindow_uh(args_XMapWindow argp);
Colormap xcreatecolormap_uh(args_XCreateColormap argp);
Window xcreatewindow_uh(args_XCreateWindow argp);
int xfree_uh(args_XFree argp);
int xsetnormalhints_uh(args_XSetNormalHints argp);
int xsetstandardproperties_uh(args_XSetStandardProperties argp);
void glclearindex_uh(args_glClearIndex argp);
void glclearcolor_uh(args_glClearColor argp);
void glclear_uh(args_glClear argp);
void glindexmask_uh(args_glIndexMask argp);
void glcolormask_uh(args_glColorMask argp);
void glalphafunc_uh(args_glAlphaFunc argp);
void glblendfunc_uh(args_glBlendFunc argp);
void gllogicop_uh(args_glLogicOp argp);
void glcullface_uh(args_glCullFace argp);
void glfrontface_uh(args_glFrontFace argp);
void glpointsize_uh(args_glPointSize argp);
void gllinewidth_uh(args_glLineWidth argp);
void gllinestipple_uh(args_glLineStipple argp);
void glpolygonmode_uh(args_glPolygonMode argp);
void glpolygonoffset_uh(args_glPolygonOffset argp);
void glpolygonstipple_uh(args_glPolygonStipple argp);
void glgetpolygonstipple_uh(args_glGetPolygonStipple argp);
void gledgeflag_uh(args_glEdgeFlag argp);
void gledgeflagv_uh(args_glEdgeFlagv argp);
void glscissor_uh(args_glScissor argp);
void glclipplane_uh(args_glClipPlane argp);
void glgetclipplane_uh(args_glGetClipPlane argp);
void gldrawbuffer_uh(args_glDrawBuffer argp);
void glreadbuffer_uh(args_glReadBuffer argp);
void glenable_uh(args_glEnable argp);
void gldisable_uh(args_glDisable argp);
GLboolean glisenabled_uh(args_glIsEnabled argp);
void glenableclientstate_uh(args_glEnableClientState argp);
void gldisableclientstate_uh(args_glDisableClientState argp);
void glgetbooleanv_uh(args_glGetBooleanv argp);
void glgetdoublev_uh(args_glGetDoublev argp);
void glgetfloatv_uh(args_glGetFloatv argp);
void glgetintegerv_uh(args_glGetIntegerv argp);
void glpushattrib_uh(args_glPushAttrib argp);
void glpopattrib_uh();
void glpushclientattrib_uh(args_glPushClientAttrib argp);
void glpopclientattrib_uh();
GLint glrendermode_uh(args_glRenderMode argp);
void glfinish_uh();
void glflush_uh();
void glhint_uh(args_glHint argp);
void glcleardepth_uh(args_glClearDepth argp);
void gldepthfunc_uh(args_glDepthFunc argp);
void gldepthmask_uh(args_glDepthMask argp);
void gldepthrange_uh(args_glDepthRange argp);
void glclearaccum_uh(args_glClearAccum argp);
void glaccum_uh(args_glAccum argp);
void glmatrixmode_uh(args_glMatrixMode argp);
void glortho_uh(args_glOrtho argp);
void glfrustum_uh(args_glFrustum argp);
void glviewport_uh(args_glViewport argp);
void glpushmatrix_uh();
void glpopmatrix_uh();
void glloadidentity_uh();
void glloadmatrixd_uh(args_glLoadMatrixd argp);
void glloadmatrixf_uh(args_glLoadMatrixf argp);
void glmultmatrixd_uh(args_glMultMatrixd argp);
void glmultmatrixf_uh(args_glMultMatrixf argp);
void glrotated_uh(args_glRotated argp);
void glrotatef_uh(args_glRotatef argp);
void glscaled_uh(args_glScaled argp);
void glscalef_uh(args_glScalef argp);
void gltranslated_uh(args_glTranslated argp);
void gltranslatef_uh(args_glTranslatef argp);
GLboolean glislist_uh(args_glIsList argp);
void gldeletelists_uh(args_glDeleteLists argp);
GLuint glgenlists_uh(args_glGenLists argp);
void glnewlist_uh(args_glNewList argp);
void glendlist_uh();
void glcalllist_uh(args_glCallList argp);
void glcalllists_uh(args_glCallLists argp);
void gllistbase_uh(args_glListBase argp);
void glbegin_uh(args_glBegin argp);
void glend_uh();
void glvertex2d_uh(args_glVertex2d argp);
void glvertex2f_uh(args_glVertex2f argp);
void glvertex2i_uh(args_glVertex2i argp);
void glvertex2s_uh(args_glVertex2s argp);
void glvertex3d_uh(args_glVertex3d argp);
void glvertex3f_uh(args_glVertex3f argp);
void glvertex3i_uh(args_glVertex3i argp);
void glvertex3s_uh(args_glVertex3s argp);
void glvertex4d_uh(args_glVertex4d argp);
void glvertex4f_uh(args_glVertex4f argp);
void glvertex4i_uh(args_glVertex4i argp);
void glvertex4s_uh(args_glVertex4s argp);
void glvertex2dv_uh(args_glVertex2dv argp);
void glvertex2fv_uh(args_glVertex2fv argp);
void glvertex2iv_uh(args_glVertex2iv argp);
void glvertex2sv_uh(args_glVertex2sv argp);
void glvertex3dv_uh(args_glVertex3dv argp);
void glvertex3fv_uh(args_glVertex3fv argp);
void glvertex3iv_uh(args_glVertex3iv argp);
void glvertex3sv_uh(args_glVertex3sv argp);
void glvertex4dv_uh(args_glVertex4dv argp);
void glvertex4fv_uh(args_glVertex4fv argp);
void glvertex4iv_uh(args_glVertex4iv argp);
void glvertex4sv_uh(args_glVertex4sv argp);
void glnormal3b_uh(args_glNormal3b argp);
void glnormal3d_uh(args_glNormal3d argp);
void glnormal3f_uh(args_glNormal3f argp);
void glnormal3i_uh(args_glNormal3i argp);
void glnormal3s_uh(args_glNormal3s argp);
void glnormal3bv_uh(args_glNormal3bv argp);
void glnormal3dv_uh(args_glNormal3dv argp);
void glnormal3fv_uh(args_glNormal3fv argp);
void glnormal3iv_uh(args_glNormal3iv argp);
void glnormal3sv_uh(args_glNormal3sv argp);
void glindexd_uh(args_glIndexd argp);
void glindexf_uh(args_glIndexf argp);
void glindexi_uh(args_glIndexi argp);
void glindexs_uh(args_glIndexs argp);
void glindexub_uh(args_glIndexub argp);
void glindexdv_uh(args_glIndexdv argp);
void glindexfv_uh(args_glIndexfv argp);
void glindexiv_uh(args_glIndexiv argp);
void glindexsv_uh(args_glIndexsv argp);
void glindexubv_uh(args_glIndexubv argp);
void glcolor3b_uh(args_glColor3b argp);
void glcolor3d_uh(args_glColor3d argp);
void glcolor3f_uh(args_glColor3f argp);
void glcolor3i_uh(args_glColor3i argp);
void glcolor3s_uh(args_glColor3s argp);
void glcolor3ub_uh(args_glColor3ub argp);
void glcolor3ui_uh(args_glColor3ui argp);
void glcolor3us_uh(args_glColor3us argp);
void glcolor4b_uh(args_glColor4b argp);
void glcolor4d_uh(args_glColor4d argp);
void glcolor4f_uh(args_glColor4f argp);
void glcolor4i_uh(args_glColor4i argp);
void glcolor4s_uh(args_glColor4s argp);
void glcolor4ub_uh(args_glColor4ub argp);
void glcolor4ui_uh(args_glColor4ui argp);
void glcolor4us_uh(args_glColor4us argp);
void glcolor3bv_uh(args_glColor3bv argp);
void glcolor3dv_uh(args_glColor3dv argp);
void glcolor3fv_uh(args_glColor3fv argp);
void glcolor3iv_uh(args_glColor3iv argp);
void glcolor3sv_uh(args_glColor3sv argp);
void glcolor3ubv_uh(args_glColor3ubv argp);
void glcolor3uiv_uh(args_glColor3uiv argp);
void glcolor3usv_uh(args_glColor3usv argp);
void glcolor4bv_uh(args_glColor4bv argp);
void glcolor4dv_uh(args_glColor4dv argp);
void glcolor4fv_uh(args_glColor4fv argp);
void glcolor4iv_uh(args_glColor4iv argp);
void glcolor4sv_uh(args_glColor4sv argp);
void glcolor4ubv_uh(args_glColor4ubv argp);
void glcolor4uiv_uh(args_glColor4uiv argp);
void glcolor4usv_uh(args_glColor4usv argp);
void gltexcoord1d_uh(args_glTexCoord1d argp);
void gltexcoord1f_uh(args_glTexCoord1f argp);
void gltexcoord1i_uh(args_glTexCoord1i argp);
void gltexcoord1s_uh(args_glTexCoord1s argp);
void gltexcoord2d_uh(args_glTexCoord2d argp);
void gltexcoord2f_uh(args_glTexCoord2f argp);
void gltexcoord2i_uh(args_glTexCoord2i argp);
void gltexcoord2s_uh(args_glTexCoord2s argp);
void gltexcoord3d_uh(args_glTexCoord3d argp);
void gltexcoord3f_uh(args_glTexCoord3f argp);
void gltexcoord3i_uh(args_glTexCoord3i argp);
void gltexcoord3s_uh(args_glTexCoord3s argp);
void gltexcoord4d_uh(args_glTexCoord4d argp);
void gltexcoord4f_uh(args_glTexCoord4f argp);
void gltexcoord4i_uh(args_glTexCoord4i argp);
void gltexcoord4s_uh(args_glTexCoord4s argp);
void gltexcoord1dv_uh(args_glTexCoord1dv argp);
void gltexcoord1fv_uh(args_glTexCoord1fv argp);
void gltexcoord1iv_uh(args_glTexCoord1iv argp);
void gltexcoord1sv_uh(args_glTexCoord1sv argp);
void gltexcoord2dv_uh(args_glTexCoord2dv argp);
void gltexcoord2fv_uh(args_glTexCoord2fv argp);
void gltexcoord2iv_uh(args_glTexCoord2iv argp);
void gltexcoord2sv_uh(args_glTexCoord2sv argp);
void gltexcoord3dv_uh(args_glTexCoord3dv argp);
void gltexcoord3fv_uh(args_glTexCoord3fv argp);
void gltexcoord3iv_uh(args_glTexCoord3iv argp);
void gltexcoord3sv_uh(args_glTexCoord3sv argp);
void gltexcoord4dv_uh(args_glTexCoord4dv argp);
void gltexcoord4fv_uh(args_glTexCoord4fv argp);
void gltexcoord4iv_uh(args_glTexCoord4iv argp);
void gltexcoord4sv_uh(args_glTexCoord4sv argp);
void glrasterpos2d_uh(args_glRasterPos2d argp);
void glrasterpos2f_uh(args_glRasterPos2f argp);
void glrasterpos2i_uh(args_glRasterPos2i argp);
void glrasterpos2s_uh(args_glRasterPos2s argp);
void glrasterpos3d_uh(args_glRasterPos3d argp);
void glrasterpos3f_uh(args_glRasterPos3f argp);
void glrasterpos3i_uh(args_glRasterPos3i argp);
void glrasterpos3s_uh(args_glRasterPos3s argp);
void glrasterpos4d_uh(args_glRasterPos4d argp);
void glrasterpos4f_uh(args_glRasterPos4f argp);
void glrasterpos4i_uh(args_glRasterPos4i argp);
void glrasterpos4s_uh(args_glRasterPos4s argp);
void glrasterpos2dv_uh(args_glRasterPos2dv argp);
void glrasterpos2fv_uh(args_glRasterPos2fv argp);
void glrasterpos2iv_uh(args_glRasterPos2iv argp);
void glrasterpos2sv_uh(args_glRasterPos2sv argp);
void glrasterpos3dv_uh(args_glRasterPos3dv argp);
void glrasterpos3fv_uh(args_glRasterPos3fv argp);
void glrasterpos3iv_uh(args_glRasterPos3iv argp);
void glrasterpos3sv_uh(args_glRasterPos3sv argp);
void glrasterpos4dv_uh(args_glRasterPos4dv argp);
void glrasterpos4fv_uh(args_glRasterPos4fv argp);
void glrasterpos4iv_uh(args_glRasterPos4iv argp);
void glrasterpos4sv_uh(args_glRasterPos4sv argp);
void glrectd_uh(args_glRectd argp);
void glrectf_uh(args_glRectf argp);
void glrecti_uh(args_glRecti argp);
void glrects_uh(args_glRects argp);
void glrectdv_uh(args_glRectdv argp);
void glrectfv_uh(args_glRectfv argp);
void glrectiv_uh(args_glRectiv argp);
void glrectsv_uh(args_glRectsv argp);
void glvertexpointer_uh(args_glVertexPointer argp);
void glnormalpointer_uh(args_glNormalPointer argp);
void glcolorpointer_uh(args_glColorPointer argp);
void glindexpointer_uh(args_glIndexPointer argp);
void gltexcoordpointer_uh(args_glTexCoordPointer argp);
void gledgeflagpointer_uh(args_glEdgeFlagPointer argp);
void glgetpointerv_uh(args_glGetPointerv argp);
void glarrayelement_uh(args_glArrayElement argp);
void gldrawarrays_uh(args_glDrawArrays argp);
void gldrawelements_uh(args_glDrawElements argp);
void glinterleavedarrays_uh(args_glInterleavedArrays argp);
void glshademodel_uh(args_glShadeModel argp);
void gllightf_uh(args_glLightf argp);
void gllighti_uh(args_glLighti argp);
void gllightfv_uh(args_glLightfv argp);
void gllightiv_uh(args_glLightiv argp);
void glgetlightfv_uh(args_glGetLightfv argp);
void glgetlightiv_uh(args_glGetLightiv argp);
void gllightmodelf_uh(args_glLightModelf argp);
void gllightmodeli_uh(args_glLightModeli argp);
void gllightmodelfv_uh(args_glLightModelfv argp);
void gllightmodeliv_uh(args_glLightModeliv argp);
void glmaterialf_uh(args_glMaterialf argp);
void glmateriali_uh(args_glMateriali argp);
void glmaterialfv_uh(args_glMaterialfv argp);
void glmaterialiv_uh(args_glMaterialiv argp);
void glgetmaterialfv_uh(args_glGetMaterialfv argp);
void glgetmaterialiv_uh(args_glGetMaterialiv argp);
void glcolormaterial_uh(args_glColorMaterial argp);
void glpixelzoom_uh(args_glPixelZoom argp);
void glpixelstoref_uh(args_glPixelStoref argp);
void glpixelstorei_uh(args_glPixelStorei argp);
void glpixeltransferf_uh(args_glPixelTransferf argp);
void glpixeltransferi_uh(args_glPixelTransferi argp);
void glpixelmapfv_uh(args_glPixelMapfv argp);
void glpixelmapuiv_uh(args_glPixelMapuiv argp);
void glpixelmapusv_uh(args_glPixelMapusv argp);
void glgetpixelmapfv_uh(args_glGetPixelMapfv argp);
void glgetpixelmapuiv_uh(args_glGetPixelMapuiv argp);
void glgetpixelmapusv_uh(args_glGetPixelMapusv argp);
void glbitmap_uh(args_glBitmap argp);
void glreadpixels_uh(args_glReadPixels argp);
void gldrawpixels_uh(args_glDrawPixels argp);
void glcopypixels_uh(args_glCopyPixels argp);
void glstencilfunc_uh(args_glStencilFunc argp);
void glstencilmask_uh(args_glStencilMask argp);
void glstencilop_uh(args_glStencilOp argp);
void glclearstencil_uh(args_glClearStencil argp);
void gltexgend_uh(args_glTexGend argp);
void gltexgenf_uh(args_glTexGenf argp);
void gltexgeni_uh(args_glTexGeni argp);
void gltexgendv_uh(args_glTexGendv argp);
void gltexgenfv_uh(args_glTexGenfv argp);
void gltexgeniv_uh(args_glTexGeniv argp);
void glgettexgendv_uh(args_glGetTexGendv argp);
void glgettexgenfv_uh(args_glGetTexGenfv argp);
void glgettexgeniv_uh(args_glGetTexGeniv argp);
void gltexenvf_uh(args_glTexEnvf argp);
void gltexenvi_uh(args_glTexEnvi argp);
void gltexenvfv_uh(args_glTexEnvfv argp);
void gltexenviv_uh(args_glTexEnviv argp);
void glgettexenvfv_uh(args_glGetTexEnvfv argp);
void glgettexenviv_uh(args_glGetTexEnviv argp);
void gltexparameterf_uh(args_glTexParameterf argp);
void gltexparameteri_uh(args_glTexParameteri argp);
void gltexparameterfv_uh(args_glTexParameterfv argp);
void gltexparameteriv_uh(args_glTexParameteriv argp);
void glgettexparameterfv_uh(args_glGetTexParameterfv argp);
void glgettexparameteriv_uh(args_glGetTexParameteriv argp);
void glgettexlevelparameterfv_uh(args_glGetTexLevelParameterfv argp);
void glgettexlevelparameteriv_uh(args_glGetTexLevelParameteriv argp);
void glteximage1d_uh(args_glTexImage1D argp);
void glteximage2d_uh(args_glTexImage2D argp);
void glgetteximage_uh(args_glGetTexImage argp);
void glgentextures_uh(args_glGenTextures argp);
void gldeletetextures_uh(args_glDeleteTextures argp);
void glbindtexture_uh(args_glBindTexture argp);
void glprioritizetextures_uh(args_glPrioritizeTextures argp);
GLboolean glaretexturesresident_uh(args_glAreTexturesResident argp);
GLboolean glistexture_uh(args_glIsTexture argp);
void gltexsubimage1d_uh(args_glTexSubImage1D argp);
void gltexsubimage2d_uh(args_glTexSubImage2D argp);
void glcopyteximage1d_uh(args_glCopyTexImage1D argp);
void glcopyteximage2d_uh(args_glCopyTexImage2D argp);
void glcopytexsubimage1d_uh(args_glCopyTexSubImage1D argp);
void glcopytexsubimage2d_uh(args_glCopyTexSubImage2D argp);
void glmap1d_uh(args_glMap1d argp);
void glmap1f_uh(args_glMap1f argp);
void glmap2d_uh(args_glMap2d argp);
void glmap2f_uh(args_glMap2f argp);
void glgetmapdv_uh(args_glGetMapdv argp);
void glgetmapfv_uh(args_glGetMapfv argp);
void glgetmapiv_uh(args_glGetMapiv argp);
void glevalcoord1d_uh(args_glEvalCoord1d argp);
void glevalcoord1f_uh(args_glEvalCoord1f argp);
void glevalcoord1dv_uh(args_glEvalCoord1dv argp);
void glevalcoord1fv_uh(args_glEvalCoord1fv argp);
void glevalcoord2d_uh(args_glEvalCoord2d argp);
void glevalcoord2f_uh(args_glEvalCoord2f argp);
void glevalcoord2dv_uh(args_glEvalCoord2dv argp);
void glevalcoord2fv_uh(args_glEvalCoord2fv argp);
void glmapgrid1d_uh(args_glMapGrid1d argp);
void glmapgrid1f_uh(args_glMapGrid1f argp);
void glmapgrid2d_uh(args_glMapGrid2d argp);
void glmapgrid2f_uh(args_glMapGrid2f argp);
void glevalpoint1_uh(args_glEvalPoint1 argp);
void glevalpoint2_uh(args_glEvalPoint2 argp);
void glevalmesh1_uh(args_glEvalMesh1 argp);
void glevalmesh2_uh(args_glEvalMesh2 argp);
void glfogf_uh(args_glFogf argp);
void glfogi_uh(args_glFogi argp);
void glfogfv_uh(args_glFogfv argp);
void glfogiv_uh(args_glFogiv argp);
void glfeedbackbuffer_uh(args_glFeedbackBuffer argp);
void glpassthrough_uh(args_glPassThrough argp);
void glselectbuffer_uh(args_glSelectBuffer argp);
void glinitnames_uh();
void glloadname_uh(args_glLoadName argp);
void glpushname_uh(args_glPushName argp);
void glpopname_uh();
void gldrawrangeelements_uh(args_glDrawRangeElements argp);
void glteximage3d_uh(args_glTexImage3D argp);
void gltexsubimage3d_uh(args_glTexSubImage3D argp);
void glcopytexsubimage3d_uh(args_glCopyTexSubImage3D argp);
void glcolortable_uh(args_glColorTable argp);
void glcolorsubtable_uh(args_glColorSubTable argp);
void glcolortableparameteriv_uh(args_glColorTableParameteriv argp);
void glcolortableparameterfv_uh(args_glColorTableParameterfv argp);
void glcopycolorsubtable_uh(args_glCopyColorSubTable argp);
void glcopycolortable_uh(args_glCopyColorTable argp);
void glgetcolortable_uh(args_glGetColorTable argp);
void glgetcolortableparameterfv_uh(args_glGetColorTableParameterfv argp);
void glgetcolortableparameteriv_uh(args_glGetColorTableParameteriv argp);
void glblendequation_uh(args_glBlendEquation argp);
void glblendcolor_uh(args_glBlendColor argp);
void glhistogram_uh(args_glHistogram argp);
void glresethistogram_uh(args_glResetHistogram argp);
void glgethistogram_uh(args_glGetHistogram argp);
void glgethistogramparameterfv_uh(args_glGetHistogramParameterfv argp);
void glgethistogramparameteriv_uh(args_glGetHistogramParameteriv argp);
void glminmax_uh(args_glMinmax argp);
void glresetminmax_uh(args_glResetMinmax argp);
void glgetminmax_uh(args_glGetMinmax argp);
void glgetminmaxparameterfv_uh(args_glGetMinmaxParameterfv argp);
void glgetminmaxparameteriv_uh(args_glGetMinmaxParameteriv argp);
void glconvolutionfilter1d_uh(args_glConvolutionFilter1D argp);
void glconvolutionfilter2d_uh(args_glConvolutionFilter2D argp);
void glconvolutionparameterf_uh(args_glConvolutionParameterf argp);
void glconvolutionparameterfv_uh(args_glConvolutionParameterfv argp);
void glconvolutionparameteri_uh(args_glConvolutionParameteri argp);
void glconvolutionparameteriv_uh(args_glConvolutionParameteriv argp);
void glcopyconvolutionfilter1d_uh(args_glCopyConvolutionFilter1D argp);
void glcopyconvolutionfilter2d_uh(args_glCopyConvolutionFilter2D argp);
void glgetconvolutionfilter_uh(args_glGetConvolutionFilter argp);
void glgetconvolutionparameterfv_uh(args_glGetConvolutionParameterfv argp);
void glgetconvolutionparameteriv_uh(args_glGetConvolutionParameteriv argp);
void glseparablefilter2d_uh(args_glSeparableFilter2D argp);
void glgetseparablefilter_uh(args_glGetSeparableFilter argp);
void glactivetexture_uh(args_glActiveTexture argp);
void glclientactivetexture_uh(args_glClientActiveTexture argp);
void glcompressedteximage1d_uh(args_glCompressedTexImage1D argp);
void glcompressedteximage2d_uh(args_glCompressedTexImage2D argp);
void glcompressedteximage3d_uh(args_glCompressedTexImage3D argp);
void glcompressedtexsubimage1d_uh(args_glCompressedTexSubImage1D argp);
void glcompressedtexsubimage2d_uh(args_glCompressedTexSubImage2D argp);
void glcompressedtexsubimage3d_uh(args_glCompressedTexSubImage3D argp);
void glgetcompressedteximage_uh(args_glGetCompressedTexImage argp);
void glmultitexcoord1d_uh(args_glMultiTexCoord1d argp);
void glmultitexcoord1dv_uh(args_glMultiTexCoord1dv argp);
void glmultitexcoord1f_uh(args_glMultiTexCoord1f argp);
void glmultitexcoord1fv_uh(args_glMultiTexCoord1fv argp);
void glmultitexcoord1i_uh(args_glMultiTexCoord1i argp);
void glmultitexcoord1iv_uh(args_glMultiTexCoord1iv argp);
void glmultitexcoord1s_uh(args_glMultiTexCoord1s argp);
void glmultitexcoord1sv_uh(args_glMultiTexCoord1sv argp);
void glmultitexcoord2d_uh(args_glMultiTexCoord2d argp);
void glmultitexcoord2dv_uh(args_glMultiTexCoord2dv argp);
void glmultitexcoord2f_uh(args_glMultiTexCoord2f argp);
void glmultitexcoord2fv_uh(args_glMultiTexCoord2fv argp);
void glmultitexcoord2i_uh(args_glMultiTexCoord2i argp);
void glmultitexcoord2iv_uh(args_glMultiTexCoord2iv argp);
void glmultitexcoord2s_uh(args_glMultiTexCoord2s argp);
void glmultitexcoord2sv_uh(args_glMultiTexCoord2sv argp);
void glmultitexcoord3d_uh(args_glMultiTexCoord3d argp);
void glmultitexcoord3dv_uh(args_glMultiTexCoord3dv argp);
void glmultitexcoord3f_uh(args_glMultiTexCoord3f argp);
void glmultitexcoord3fv_uh(args_glMultiTexCoord3fv argp);
void glmultitexcoord3i_uh(args_glMultiTexCoord3i argp);
void glmultitexcoord3iv_uh(args_glMultiTexCoord3iv argp);
void glmultitexcoord3s_uh(args_glMultiTexCoord3s argp);
void glmultitexcoord3sv_uh(args_glMultiTexCoord3sv argp);
void glmultitexcoord4d_uh(args_glMultiTexCoord4d argp);
void glmultitexcoord4dv_uh(args_glMultiTexCoord4dv argp);
void glmultitexcoord4f_uh(args_glMultiTexCoord4f argp);
void glmultitexcoord4fv_uh(args_glMultiTexCoord4fv argp);
void glmultitexcoord4i_uh(args_glMultiTexCoord4i argp);
void glmultitexcoord4iv_uh(args_glMultiTexCoord4iv argp);
void glmultitexcoord4s_uh(args_glMultiTexCoord4s argp);
void glmultitexcoord4sv_uh(args_glMultiTexCoord4sv argp);
void glsamplecoverage_uh(args_glSampleCoverage argp);
void glactivetexturearb_uh(args_glActiveTextureARB argp);
void glclientactivetexturearb_uh(args_glClientActiveTextureARB argp);
void glmultitexcoord1darb_uh(args_glMultiTexCoord1dARB argp);
void glmultitexcoord1dvarb_uh(args_glMultiTexCoord1dvARB argp);
void glmultitexcoord1farb_uh(args_glMultiTexCoord1fARB argp);
void glmultitexcoord1fvarb_uh(args_glMultiTexCoord1fvARB argp);
void glmultitexcoord1iarb_uh(args_glMultiTexCoord1iARB argp);
void glmultitexcoord1ivarb_uh(args_glMultiTexCoord1ivARB argp);
void glmultitexcoord1sarb_uh(args_glMultiTexCoord1sARB argp);
void glmultitexcoord1svarb_uh(args_glMultiTexCoord1svARB argp);
void glmultitexcoord2darb_uh(args_glMultiTexCoord2dARB argp);
void glmultitexcoord2dvarb_uh(args_glMultiTexCoord2dvARB argp);
void glmultitexcoord2farb_uh(args_glMultiTexCoord2fARB argp);
void glmultitexcoord2fvarb_uh(args_glMultiTexCoord2fvARB argp);
void glmultitexcoord2iarb_uh(args_glMultiTexCoord2iARB argp);
void glmultitexcoord2ivarb_uh(args_glMultiTexCoord2ivARB argp);
void glmultitexcoord2sarb_uh(args_glMultiTexCoord2sARB argp);
void glmultitexcoord2svarb_uh(args_glMultiTexCoord2svARB argp);
void glmultitexcoord3darb_uh(args_glMultiTexCoord3dARB argp);
void glmultitexcoord3dvarb_uh(args_glMultiTexCoord3dvARB argp);
void glmultitexcoord3farb_uh(args_glMultiTexCoord3fARB argp);
void glmultitexcoord3fvarb_uh(args_glMultiTexCoord3fvARB argp);
void glmultitexcoord3iarb_uh(args_glMultiTexCoord3iARB argp);
void glmultitexcoord3ivarb_uh(args_glMultiTexCoord3ivARB argp);
void glmultitexcoord3sarb_uh(args_glMultiTexCoord3sARB argp);
void glmultitexcoord3svarb_uh(args_glMultiTexCoord3svARB argp);
void glmultitexcoord4darb_uh(args_glMultiTexCoord4dARB argp);
void glmultitexcoord4dvarb_uh(args_glMultiTexCoord4dvARB argp);
void glmultitexcoord4farb_uh(args_glMultiTexCoord4fARB argp);
void glmultitexcoord4fvarb_uh(args_glMultiTexCoord4fvARB argp);
void glmultitexcoord4iarb_uh(args_glMultiTexCoord4iARB argp);
void glmultitexcoord4ivarb_uh(args_glMultiTexCoord4ivARB argp);
void glmultitexcoord4sarb_uh(args_glMultiTexCoord4sARB argp);
void glmultitexcoord4svarb_uh(args_glMultiTexCoord4svARB argp);
void glxdestroycontext_uh(args_glXDestroyContext argp);
void glxswapbuffers_uh(args_glXSwapBuffers argp);
void glxdestroyglxpixmap_uh(args_glXDestroyGLXPixmap argp);
Bool glxqueryextension_uh(args_glXQueryExtension argp);
Bool glxqueryversion_uh(args_glXQueryVersion argp);
Bool glxisdirect_uh(args_glXIsDirect argp);
GLXContext glxgetcurrentcontext_uh();
GLXDrawable glxgetcurrentdrawable_uh();
void glxwaitgl_uh();
void glxwaitx_uh();
void glxusexfont_uh(args_glXUseXFont argp);
Display* glxgetcurrentdisplay_uh();
void glxdestroywindow_uh(args_glXDestroyWindow argp);
void glxdestroypixmap_uh(args_glXDestroyPixmap argp);
void glxdestroypbuffer_uh(args_glXDestroyPbuffer argp);
GLXDrawable glxgetcurrentreaddrawable_uh();
__GLXextFuncPtr glxgetprocaddressarb_uh(args_glXGetProcAddressARB argp);
void* glxgetprocaddress_uh(args_glXGetProcAddress argp);
void* glxallocatememorynv_uh(args_glXAllocateMemoryNV argp);
void glxfreememorynv_uh(args_glXFreeMemoryNV argp);
